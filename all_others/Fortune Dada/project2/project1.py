# -*- coding: utf-8 -*-
"""project1

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RIpdlXctt7PHs-y1Hf3d7aql4yUliQMr
"""

import sys
import csv
import html
from urllib.parse import urlparse
from urllib.request import urlopen, Request
from html.parser import HTMLParser
from io import StringIO


def read_input(source: str) -> str:
    parsed = urlparse(source)
    if parsed.scheme in ("http", "https"):
        req = Request(source, headers={"User-Agent": "Mozilla/5.0"})
        with urlopen(req) as resp:
            return resp.read().decode("utf-8", errors="replace")
    with open(source, "r", encoding="utf-8", errors="replace") as f:
        return f.read()

class Tableparser(HTMLParser):
    def __init__(self):
        super().__init__()
        self.in_table = False
        self.in_row = False
        self.in_cell = False
        self.current_cell = []
        self.current_row = []
        self.tables = []

    def handle_starttag(self, tag, attrs):
        t = tag.lower()
        if t == "table":
            self.in_table = True
            self.tables.append([])
        elif self.in_table and t == "tr":
            self.in_row = True
            self.current_row = []
        elif self.in_table and t in ("td", "th"):
            self.in_cell = True
            self.current_cell = []

    def handle_endtag(self, tag):
        t = tag.lower()
        if t in ("td","th") and self.in_cell:
            text = html.unescape("".join(self.current_cell))
            text = text.strip()
            self.current_row.append(text)
            self.in_cell = False
            self.current_cell = []
        elif self.in_table and t == "tr" and self.in_row:
            if self.current_row:
                self.tables[-1].append(self.current_row)
            self.in_row = False
            self.current_row = []
        elif t == "table" and self.in_table:
            self.in_table = False


    def handle_data(self, data):
        if self.in_cell:
            self.current_cell.append(data)


def convert_to_csv(tables):
    count = 0
    for table in tables:
        if not table or all(len(row) == 0 for row in table):
            continue
        count += 1
        out_name = f"table_{count}.csv"

        width = max((len(r) for r in table), default=0)
        with open(out_name, "w", newline="", encoding="utf-8") as f:
            w = csv.writer(f)
            for row in table:

                padded = row + [""] * (width - len(row))
                w.writerow(padded)
        print(f"Wrote {out_name}")
    if count == 0:
        print("No <table> elements found.")


url_or_file = "https://en.wikipedia.org/wiki/Comparison_of_programming_languages" # Replace with your source

html_text = read_input(url_or_file)
parser = Tableparser()
parser.feed(html_text)
convert_to_csv(parser.tables)